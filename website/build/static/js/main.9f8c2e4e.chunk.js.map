{"version":3,"sources":["components/ResultList.tsx","components/AppBar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Result","props","Fragment","state","State","Succeeded","Paper","Box","pt","px","pb","display","flexDirection","justifyContent","flexGrow","Typography","component","variant","IconButton","size","onClick","closeResult","mt","List","disablePadding","aria-label","result","names","length","nicknames","phone_numbers","id_numbers","qq_numbers","passwords","emails","addresses","ListItem","disableGutters","ListItemIcon","ListItemText","primary","map","name","index","nickname","phoneNumber","idNumber","SvgIcon","fill","d","qqNumber","primaryTypographyProps","style","wordWrap","email","address","useStyles","makeStyles","theme","header","flex","menuButton","marginRight","spacing","title","AppBar","classes","Container","maxWidth","className","position","Toolbar","edge","color","Link","href","underline","target","Button","footer","textAlign","padding","link","temp","alignItems","Footer","fontSize","main","heroContent","App","React","useState","value","setValue","Normal","setState","error","setError","setResult","query","a","url","URL","document","baseURI","search","URLSearchParams","toString","fetch","then","response","json","code","Failed","message","data","catch","console","log","CssBaseline","Alert","severity","align","gutterBottom","FormControl","fullWidth","TextField","id","label","type","onChange","event","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","grey","secondary","pink","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.9f8c2e4e.chunk.js","sourcesContent":["import Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {List, ListItem, ListItemIcon, ListItemText, SvgIcon} from \"@material-ui/core\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport {QueryResult, State} from '../App';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\ninterface ResultProps {\n    state: State;\n    closeResult: () => void;\n    result: QueryResult;\n}\n\nfunction Result(props: ResultProps) {\n    return (\n        <React.Fragment>\n            {\n                props.state === State.Succeeded &&\n                <Paper>\n                    <Box pt={2} px={2} pb={1}>\n                        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                            <Box flexGrow={1}>\n                                <Typography component=\"h5\" variant=\"h5\">检测结果</Typography>\n                            </Box>\n                            <IconButton size=\"small\">\n                                <CloseIcon onClick={() => {\n                                    props.closeResult();\n                                }}/>\n                            </IconButton>\n                        </Box>\n                        <Box mt={1}>\n                            <List disablePadding component=\"nav\" aria-label=\"main mailbox folders\">\n                                {\n                                    (\n                                        props.result.names.length === 0 &&\n                                        props.result.nicknames.length === 0 &&\n                                        props.result.phone_numbers.length === 0 &&\n                                        props.result.id_numbers.length === 0 &&\n                                        props.result.qq_numbers.length === 0 &&\n                                        props.result.passwords.length === 0 &&\n                                        props.result.emails.length === 0 &&\n                                        props.result.addresses.length === 0\n                                    ) && <ListItem disableGutters>\n                                        <ListItem>\n                                            <ListItemIcon>\n                                                <DoneIcon/>\n                                            </ListItemIcon>\n                                            <ListItemText primary=\"未查询到任何结果\"/>\n                                        </ListItem>\n                                    </ListItem>\n                                }\n                                {\n                                    props.result.names.map((name, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <FaceIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primary={name}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.nicknames.map((nickname, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <AccountCircleIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primary={nickname}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.phone_numbers.map((phoneNumber, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <PhoneIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primary={phoneNumber}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.id_numbers.map((idNumber, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <SvgIcon>\n                                                        <path fill=\"currentColor\"\n                                                              d=\"M2,3H22C23.05,3 24,3.95 24,5V19C24,20.05 23.05,21 22,21H2C0.95,21 0,20.05 0,19V5C0,3.95 0.95,3 2,3M14,6V7H22V6H14M14,8V9H21.5L22,9V8H14M14,10V11H21V10H14M8,13.91C6,13.91 2,15 2,17V18H14V17C14,15 10,13.91 8,13.91M8,6A3,3 0 0,0 5,9A3,3 0 0,0 8,12A3,3 0 0,0 11,9A3,3 0 0,0 8,6Z\"/>\n                                                    </SvgIcon>\n                                                </ListItemIcon>\n                                                <ListItemText primary={idNumber}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.qq_numbers.map((qqNumber, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <SvgIcon>\n                                                        <path fill=\"currentColor\"\n                                                              d=\"M3.18,13.54C3.76,12.16 4.57,11.14 5.17,10.92C5.16,10.12 5.31,9.62 5.56,9.22C5.56,9.19 5.5,8.86 5.72,8.45C5.87,4.85 8.21,2 12,2C15.79,2 18.13,4.85 18.28,8.45C18.5,8.86 18.44,9.19 18.44,9.22C18.69,9.62 18.84,10.12 18.83,10.92C19.43,11.14 20.24,12.16 20.82,13.55C21.57,15.31 21.69,17 21.09,17.3C20.68,17.5 20.03,17 19.42,16.12C19.18,17.1 18.58,18 17.73,18.71C18.63,19.04 19.21,19.58 19.21,20.19C19.21,21.19 17.63,22 15.69,22C13.93,22 12.5,21.34 12.21,20.5H11.79C11.5,21.34 10.07,22 8.31,22C6.37,22 4.79,21.19 4.79,20.19C4.79,19.58 5.37,19.04 6.27,18.71C5.42,18 4.82,17.1 4.58,16.12C3.97,17 3.32,17.5 2.91,17.3C2.31,17 2.43,15.31 3.18,13.54Z\"/>\n                                                    </SvgIcon>\n                                                </ListItemIcon>\n                                                <ListItemText primary={qqNumber}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.passwords.map((qqNumber, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <VpnKeyIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primaryTypographyProps={{style: {wordWrap: \"break-word\"}}}\n                                                              primary={qqNumber}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.emails.map((email, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <EmailIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primary={email}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                                {\n                                    props.result.addresses.map((address, index) =>\n                                        <ListItem disableGutters key={index}>\n                                            <ListItem>\n                                                <ListItemIcon>\n                                                    <BusinessIcon/>\n                                                </ListItemIcon>\n                                                <ListItemText primary={address}/>\n                                            </ListItem>\n                                        </ListItem>\n                                    )\n                                }\n                            </List>\n                        </Box>\n                    </Box>\n                </Paper>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default Result;\n","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {AppBar as MaterialAppBar} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        flex: 0,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction AppBar() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Container maxWidth={false} disableGutters className={classes.header}>\n                <MaterialAppBar position=\"static\">\n                    <Container maxWidth=\"sm\" disableGutters>\n                        <Toolbar>\n                            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\"\n                                        aria-label=\"menu\">\n                                <LockOpenIcon/>\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                Privacy\n                            </Typography>\n                            <Link href=\"https://github.com/kallydev/privacy\" underline=\"none\" target=\"_blank\"\n                                  component={Button}\n                                  color=\"inherit\">GitHub</Link>\n                        </Toolbar>\n                    </Container>\n                </MaterialAppBar>\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default AppBar;\n","import React from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport {Link} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        flex: 0,\n        textAlign: \"center\",\n        padding: theme.spacing(2),\n    },\n    link: {\n        padding: theme.spacing(0, 0.5),\n    },\n    temp: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n}));\n\nfunction Footer() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Container className={classes.footer} component=\"footer\">\n                <Box>\n                    <Typography variant=\"caption\">\n                        技术栈 React + Golang + SQLite，将于 11 月 28 日开源。\n                    </Typography>\n                </Box>\n                <Box mt={2} className={classes.temp}>\n                    <Typography display=\"inline\">Developed with</Typography>\n                    <FavoriteIcon color=\"error\" fontSize=\"default\" className={classes.link}/>\n                    <Typography display=\"inline\">by</Typography>\n                    <Link color=\"secondary\" href=\"https://github.com/kallydev\" target=\"_blank\"\n                          className={classes.link}>KallyDev</Link>\n                    <Typography display=\"inline\">.</Typography>\n                </Box>\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport 'fontsource-roboto';\nimport './App.css';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Result from \"./components/ResultList\";\nimport AppBar from \"./components/AppBar\";\nimport Footer from \"./components/Footer\";\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        flex: 1,\n        padding: theme.spacing(2),\n    },\n    heroContent: {\n        padding: theme.spacing(4, 2),\n    },\n}));\n\ninterface Response {\n    code: number;\n    message: string;\n    data: any;\n}\n\nexport interface QueryResult {\n    names: string[];\n    nicknames: string[];\n    phone_numbers: string[];\n    id_numbers: string[];\n    qq_numbers: string[];\n    passwords: string[];\n    emails: string[];\n    addresses: string[];\n}\n\nexport enum State {\n    Normal,\n    Succeeded,\n    Failed,\n}\n\nfunction App() {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState('');\n    const [state, setState] = React.useState(State.Normal);\n    const [error, setError] = React.useState('');\n    const [result, setResult] = React.useState({\n        names: [],\n        nicknames: [],\n        phone_numbers: [],\n        id_numbers: [],\n        qq_numbers: [],\n        passwords: [],\n        emails: [],\n        addresses: [],\n    } as QueryResult);\n\n    const closeResult = () => {\n        setState(State.Normal);\n    }\n\n    const query = async () => {\n        setState(State.Normal);\n        if (value.length === 0) {\n            return;\n        }\n        let url = new URL(document.baseURI + 'api/query');\n        url.search = new URLSearchParams({'value': value}).toString();\n        fetch(url.toString(), {})\n            .then(response => response.json())\n            .then((response: Response) => {\n                if (response.code !== 0) {\n                    setState(State.Failed);\n                    setError(response.message)\n                    return;\n                }\n                setResult(response.data as QueryResult);\n                setState(State.Succeeded);\n            })\n            .catch((error) => {\n                setState(State.Failed);\n                setError(error)\n                console.log('error: ' + error);\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <AppBar/>\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.main}>\n                {\n                    state === State.Failed &&\n                    <Alert variant=\"filled\" severity=\"error\">\n                        {error}\n                    </Alert>\n                }\n                <Box mt={2}>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Privacy\n                    </Typography>\n                    <Typography component=\"p\" variant=\"h5\" align=\"center\" color=\"textSecondary\">\n                        「 is dead, get over it. 」\n                    </Typography>\n                </Box>\n                <Box mt={4}>\n                    <FormControl fullWidth component=\"fieldset\">\n                        <TextField\n                            fullWidth\n                            id=\"filled-basic\"\n                            label=\"QQ / 手机号 / 身份证号 / 邮箱\"\n                            variant=\"outlined\"\n                            type=\"number\"\n                            onChange={event => {\n                                setValue(event.target.value)\n                            }}\n                            color=\"secondary\"/>\n                        <Box mt={2}>\n                            <Button fullWidth size=\"large\" variant=\"contained\" color=\"secondary\" onClick={query}>\n                                检测隐私状态\n                            </Button>\n                        </Box>\n                    </FormControl>\n                </Box>\n                {\n                    result !== null &&\n                    <Box mt={4}>\n                        <Result state={state} closeResult={closeResult} result={result}/>\n                    </Box>\n                }\n            </Container>\n            <Footer/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {grey, pink} from \"@material-ui/core/colors\";\nimport {ThemeProvider} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: grey[50],\n        },\n        secondary: {\n            main: pink[\"A200\"],\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <App/>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}